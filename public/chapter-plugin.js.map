{"mappings":"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","sources":["<anon>","src/chapter-plugin.js","src/js/markers.js","src/js/marker.js","src/js/mousedisplay.js","src/js/time-tooltip.js"],"sourcesContent":["(() => {\n// import videojs from 'video.js';\n/**\r\n * A class representing the markers display.\r\n *\r\n * This component is designed to be used inside the `SeekBar` component.\r\n *\r\n * @class MarkersDisplay\r\n * @extends videojs.getComponent('component')\r\n */ class $8713b4803d136181$var$MarkersDisplay extends videojs.getComponent(\"component\") {\n    // The constructor of a component receives two arguments: the\n    // player it will be associated with and an object of options.\n    constructor(player, options = {}){\n        // It is important to invoke the superclass before anything else, \n        // to get all the features of components out of the box!\n        super(player, options);\n        this.resetChildren = this.resetChildren.bind(this);\n        this.loadMarkers = this.loadMarkers.bind(this);\n        this.player().on(\"loadstart\", this.resetChildren);\n        this.player().on(\"loadeddata\", this.loadMarkers);\n        this.player().on(\"playerreset\", this.resetChildren);\n    }\n    loadMarkers() {\n        /** @type {videojs.TextTrack} */ const markersTrack = Array.from(this.player().textTracks()).find((track)=>track.label === \"chapter-markers\");\n        if (!markersTrack) {\n            this.addChild(\"marker-empty\", {\n                className: \"marker-empty\",\n                componentClass: \"markerDisplay\",\n                startTime: 0,\n                endTime: this.player().duration()\n            });\n            return;\n        }\n        const markers = markersTrack.cues_;\n        const gap = videojs.computedStyle(this.el(), \"gap\");\n        markers.forEach((marker, index, arr)=>{\n            if (this.player().duration() > startTime) {\n                if (index === 0 && marker.startTime > 0) {\n                    const name = \"marker-empty\";\n                    this.addChild(name, {\n                        className: name,\n                        componentClass: \"markerDisplay\",\n                        endTime: marker.startTime,\n                        gap: gap,\n                        startTime: 0\n                    });\n                }\n                const name = `marker-${index}`;\n                const hasNextMarker = arr[index + 1];\n                this.addChild(name, {\n                    className: name,\n                    componentClass: \"markerDisplay\",\n                    endTime: marker.endTime,\n                    gap: hasNextMarker ? gap : undefined,\n                    startTime: marker.startTime\n                });\n            }\n        });\n    // this.addMarkers(markersTrack.cues_);\n    }\n    addMarkers(markers = []) {\n        const gap = videojs.dom.computedStyle(this.el(), \"gap\");\n        markers.forEach((marker, index, arr)=>{\n            if (index === 0 && marker.startTime > 0) {\n                const name = \"marker-empty\";\n                this.addChild(name, {\n                    className: name,\n                    componentClass: \"markerDisplay\",\n                    endTime: marker.startTime,\n                    gap: gap,\n                    startTime: 0\n                });\n            }\n            const name = `marker-${index}`;\n            const hasNextMarker = arr[index + 1];\n            this.addChild(name, {\n                className: name,\n                componentClass: \"markerDisplay\",\n                endTime: marker.endTime,\n                gap: hasNextMarker ? gap : undefined,\n                startTime: marker.startTime\n            });\n        });\n    }\n    resetChildren() {\n        this.children().forEach((/**@type {import('./marker-display.js').default}*/ child)=>{\n            child.dispose();\n        });\n        this.children_ = [];\n        videojs.dom.emptyEl(this.el());\n    }\n    buildCSSClass() {\n        return `cst-markers ${super.buildCSSClass()}`.trim();\n    }\n    // The `createEl` function of a component creates its DOM element.\n    createEl() {\n        return videojs.dom.createEl(\"div\", {\n            className: this.buildCSSClass()\n        });\n    }\n    // This function could be called at any time to update the text \n    // contents of the component.\n    updateTextContent(text) {\n        // If no text was provided, default to \"Title Unknown\"\n        if (typeof text !== \"string\") text = \"Title Unknown\";\n        // Use Video.js utility DOM methods to manipulate the content\n        // of the component's element.\n        videojs.emptyEl(this.el());\n        videojs.appendContent(this.el(), text);\n    }\n    dispose() {\n        this.player().off(\"loadstart\", this.resetChildren);\n        this.player().off(\"loadeddata\", this.loadMarkers);\n        this.player().off(\"playerreset\", this.resetChildren);\n        this.resetChildren();\n        super.dispose();\n    }\n}\nvar $8713b4803d136181$export$2e2bcd8739ae039 = videojs.registerComponent(\"MarkersDisplay\", $8713b4803d136181$var$MarkersDisplay);\n\n\n// import videojs from 'video.js';\n/**\r\n * @typedef {Object} markerOptions\r\n *\r\n * @property {number} gap - The gap between the marker and the next one.\r\n * @property {number} endTime - The end time of the marker.\r\n * @property {number} startTime - The start time of the marker.\r\n */ /**\r\n * A class representing a marker that will be displayed in the progress bar.\r\n *\r\n * @class\r\n * @extends Component\r\n */ class $2e140a08cd56511a$var$MarkerDisplay extends videojs.getComponent(\"component\") {\n    /**\r\n   * Initialize a new `MarkerDisplay`.\r\n   * @constructor\r\n   *\r\n   * @param {videojs.Player} player - The player instance.\r\n   * @param {markerOptions} options - The options for the marker component.\r\n   */ constructor(player, options){\n        super(player, options);\n        const { gap: gap } = options;\n        this.updateMarkerPlayed = this.updateMarkerPlayed.bind(this);\n        this.updateMarkerBuffered = this.updateMarkerBuffered.bind(this);\n        this.setMarkerWidth(this.markerWidth(), gap);\n        this.player().on(\"timeupdate\", this.updateMarkerPlayed);\n        this.player().on(\"progress\", this.updateMarkerBuffered);\n    }\n    /**\r\n   * Sets the width of the marker element using inline styles.\r\n   *\r\n   * @param {Number} width - The width of the marker as a percentage.\r\n   * @param {string} gap - The gap between the current marker and the next one.\r\n   */ setMarkerWidth(width, gap) {\n        const styleWidth = gap !== undefined ? `width: calc(${width}% - ${gap})` : `width: ${width}%`;\n        this.setAttribute(\"style\", styleWidth);\n    }\n    /**\r\n   * Calculates the width of the marker as a percentage of the player's duration.\r\n   *\r\n   * @return {number} The width of the marker as a percentage.\r\n   */ markerWidth() {\n        const { endTime: endTime, startTime: startTime } = this.options();\n        return (endTime - startTime) / this.player().duration() * 100;\n    }\n    /**\r\n   * Updates the marker background color based on the provided time and the css\r\n   * variable name.\r\n   *\r\n   * @param {number} time - The time (in seconds).\r\n   * @param {string} cssVar - The CSS variable name.\r\n   */ updateMarker(time = 0, cssVar) {\n        if (!this.parentComponent_.el().getClientRects().length) return;\n        const duration = this.player().duration();\n        const markersElWidth = this.parentComponent_.el().getClientRects()[0].width;\n        const markerOffsetLeft = this.el().offsetLeft;\n        const markerOffsetWidth = this.el().offsetWidth;\n        const markerStart = duration * markerOffsetLeft / markersElWidth;\n        const markerEnd = duration * (markerOffsetLeft + markerOffsetWidth) / markersElWidth;\n        const percent = (time - markerStart) / (markerStart - markerEnd);\n        if (time > markerEnd) // Setting the value to 200% avoids losing pixel when resizing the player.\n        this.el().style.setProperty(cssVar, `200%`);\n        if (time < markerStart) this.el().style.setProperty(cssVar, `0%`);\n        if (time >= markerStart && time <= markerEnd) this.el().style.setProperty(cssVar, `${Math.abs(percent) * 100}%`);\n    }\n    /**\r\n   * Updates the buffered portion of the marker.\r\n   */ updateMarkerBuffered() {\n        this.updateMarker(this.player().bufferedEnd(), \"--_cst-marker-buffered\");\n    }\n    /**\r\n   * Updates the played portion of the marker.\r\n   */ updateMarkerPlayed() {\n        this.updateMarker(this.player().currentTime(), \"--_cst-marker-played\");\n    }\n    // ***************************************************************************\n    // Standard component functions **********************************************\n    // ***************************************************************************\n    /**\r\n   * Builds the CSS class for the marker component.\r\n   *\r\n   * @return {string} The CSS class for the marker component.\r\n   */ buildCSSClass() {\n        return `cst-marker ${super.buildCSSClass()}`.trim();\n    }\n    /**\r\n   * Creates the DOM element for the marker component.\r\n   *\r\n   * @return {HTMLDivElement} The DOM element for the marker component.\r\n   */ createEl() {\n        return super.createEl(\"div\", {\n            className: this.buildCSSClass()\n        });\n    }\n    /**\r\n   * Disposes of the marker component.\r\n   */ dispose() {\n        this.player().off(\"timeupdate\", this.updateMarkerPlayed);\n        this.player().off(\"progress\", this.updateMarkerBuffered);\n        super.dispose();\n    }\n}\nvar $2e140a08cd56511a$export$2e2bcd8739ae039 = videojs.registerComponent(\"MarkerDisplay\", $2e140a08cd56511a$var$MarkerDisplay);\n\n\n// import videojs from 'video.js';\nclass $df87045100e54dda$var$MouseTimeDisplay extends videojs.getComponent(\"MouseTimeDisplay\") {\n    constructor(player, options){\n        super(player, videojs.mergeOptions({\n            children: [\n                {\n                    componentClass: \"timeTooltipMarker\",\n                    name: \"timeTooltip\"\n                }\n            ]\n        }, options));\n    }\n    /**\r\n   * Returns an array of chapter cues from the 'chapter-markers' text track.\r\n   *\r\n   * @returns {Array} An array of chapter cues.\r\n   */ markers() {\n        const [chapterTrack = {\n            cues: {}\n        }] = Array.from(this.player().textTracks()).filter(({ label: label })=>label === \"chapter-markers\");\n        if (!chapterTrack) return [];\n        const chapterCues = Array.from(chapterTrack.cues);\n        if (chapterCues) return chapterCues;\n        return [];\n    }\n    update(seekBarRect, seekBarPoint) {\n        const time = seekBarPoint * this.player_.duration();\n        const { text: text = \"{}\" } = this.markers().findLast((marker)=>time >= marker.startTime) || {};\n        const { label: label } = JSON.parse(text);\n        this.getChild(\"timeTooltip\").updateTime(seekBarRect, seekBarPoint, time, ()=>{\n            const seekBarRectWidth = seekBarRect.width;\n            const position = seekBarRectWidth * seekBarPoint;\n            const timeTooltipWidth = parseFloat(videojs.computedStyle(this.el().firstChild, \"width\"));\n            const timeTooltipPosition = position + timeTooltipWidth / 2;\n            this.el().style.transform = `translateX(${position}px)`;\n            if (timeTooltipPosition >= timeTooltipWidth && timeTooltipPosition <= seekBarRectWidth && this.getChild(\"timeTooltip\").el().style.length === 0 || timeTooltipWidth > seekBarRectWidth) return;\n            if (timeTooltipPosition >= timeTooltipWidth && timeTooltipPosition <= seekBarRectWidth && this.getChild(\"timeTooltip\").el().style.length) {\n                this.getChild(\"timeTooltip\").el().style = \"\";\n                return;\n            }\n            if (timeTooltipPosition >= seekBarRectWidth) this.getChild(\"timeTooltip\").el().style.transform = `translateX(calc(-50% - ${Math.abs(seekBarRectWidth - timeTooltipPosition)}px))`;\n            if (timeTooltipPosition <= timeTooltipWidth) this.getChild(\"timeTooltip\").el().style.transform = `translateX(calc(-50% + ${Math.abs(Math.abs(timeTooltipPosition - timeTooltipWidth))}px))`;\n        }, label);\n    }\n    /**\r\n   * Builds the CSS class for the component.\r\n   *\r\n   * @return {string} The CSS class for the component.\r\n   */ buildCSSClass() {\n        return `vjs-simple-markers ${super.buildCSSClass()}`.trim();\n    }\n    /**\r\n   * Creates the DOM element for the component.\r\n   *\r\n   * @return {HTMLDivElement} The DOM element for the component.\r\n   */ createEl() {\n        return super.createEl();\n    }\n}\nvar $df87045100e54dda$export$2e2bcd8739ae039 = videojs.registerComponent(\"MouseTimeDisplay\", $df87045100e54dda$var$MouseTimeDisplay);\n\n\n// import videojs from 'video.js';\nclass $7f042754df40714f$var$TimeTooltipMarker extends videojs.getComponent(\"TimeTooltip\") {\n    update(content) {\n        this.write(content);\n    }\n    updateTime(seekBarRect, seekBarPoint, time, cb, label) {\n        this.requestNamedAnimationFrame(\"TimeTooltip#updateTime\", ()=>{\n            let content;\n            const duration = this.player_.duration();\n            if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n                const liveWindow = this.player_.liveTracker.liveWindow();\n                const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n                content = (secondsBehind < 1 ? \"\" : \"-\") + videojs.formatTime(secondsBehind, liveWindow);\n            } else content = videojs.formatTime(time, duration);\n            if (label) content = `${label} (${content})`;\n            this.update(content);\n            if (cb) cb();\n        });\n    }\n}\nvideojs.registerComponent(\"TimeTooltipMarker\", $7f042754df40714f$var$TimeTooltipMarker);\n\n\nconst $51dd5f39690b127d$var$Plugin = videojs.getPlugin(\"plugin\");\nclass $51dd5f39690b127d$var$Chapters extends $51dd5f39690b127d$var$Plugin {\n    constructor(player1, options){\n        super(player1, options);\n        this.markers = options.markers;\n        if (!this.markers) this.markers = [];\n        player1.addClass(\"chapter-markers\");\n        player1.getChild(\"ControlBar\").getChild(\"progressControl\").getChild(\"seekBar\").addChild(\"MarkersDisplay\", {\n            componentClass: \"MarkersDisplay\"\n        });\n        this.loadedMetadata = this.loadedMetadata.bind(this);\n        player1.on(\"loadedmetadata\", this.loadedMetadata);\n    }\n    addMark(markers = []) {\n        if (!markers.length) return;\n        /** @type {TextTrack} */ const markersTrack = player.addTextTrack(\"metadata\", \"chapter-markers\", player.language());\n        markers.forEach((marker, index, arr)=>{\n            const nextMarkerIndex = index + 1;\n            const nextMarker = arr[nextMarkerIndex];\n            /** @type {{startTime: Number}} */ const { startTime: startTime } = marker;\n            /** @type {Number} */ const endTime = nextMarker ? nextMarker.startTime : this.player().duration();\n            /** @type{VTTCue} */ const cue = {\n                startTime: startTime,\n                endTime: endTime,\n                text: JSON.stringify(marker)\n            };\n            markersTrack.addCue(cue);\n        });\n    }\n    loadedMetadata() {\n        if (!this.markers.length) return;\n        this.markersTrack = this.player.addTextTrack(\"metadata\", \"chapter-markers\", this.player.language());\n        this.markers.forEach((marker, index, arr)=>{\n            const nextMarkerIndex = index + 1;\n            const nextMarker = arr[nextMarkerIndex];\n            /** @type {{startTime: Number}} */ const { startTime: startTime } = marker;\n            /** @type {Number} */ const endTime = nextMarker ? nextMarker.startTime : this.player.duration();\n            /** @type{VTTCue} */ const cue = {\n                startTime: startTime,\n                endTime: endTime,\n                text: JSON.stringify(marker)\n            };\n            this.markersTrack.addCue(cue);\n        });\n    }\n    dispose() {\n        super.dispose();\n        videojs.log(\"the advanced plugin is being disposed\");\n    }\n    updateState() {\n        this.setState({\n            playing: !this.player.paused()\n        });\n    }\n    logState(changed) {\n        videojs.log(`the player is now ${this.state.playing ? \"playing\" : \"paused\"}`);\n    }\n}\nvideojs.registerPlugin(\"chapter\", $51dd5f39690b127d$var$Chapters);\nvar $51dd5f39690b127d$export$2e2bcd8739ae039 = $51dd5f39690b127d$var$Chapters;\n\n})();\n//# sourceMappingURL=chapter-plugin.js.map\n","\r\nimport './js/markers.js'\r\nimport './js/marker.js'\r\nimport './js/mousedisplay.js'\r\nimport './js/time-tooltip.js'\r\n\r\nconst Plugin = videojs.getPlugin('plugin');\r\n\r\nclass Chapters extends Plugin {\r\n\r\n  constructor(player, options) {\r\n    super(player, options);\r\n\r\n    this.markers = options.markers\r\n    if(!this.markers){\r\n        this.markers = []\r\n    }\r\n    player.addClass('chapter-markers');\r\n    \r\n    player\r\n    .getChild('ControlBar')\r\n    .getChild('progressControl')\r\n    .getChild('seekBar')\r\n    .addChild('MarkersDisplay',{ \r\n        componentClass: 'MarkersDisplay',\r\n    });\r\n\r\n    this.loadedMetadata = this.loadedMetadata.bind(this);\r\n\r\n    player.on('loadedmetadata', this.loadedMetadata);\r\n    \r\n  }\r\n\r\n  addMark(markers = []) {\r\n    if (!markers.length) return;\r\n     \r\n\r\n    /** @type {TextTrack} */\r\n    const markersTrack = player.addTextTrack(\r\n      'metadata',\r\n      'chapter-markers',\r\n      player.language()\r\n    );\r\n\r\n    markers.forEach((marker, index, arr) => {\r\n      const nextMarkerIndex = index + 1;\r\n      const nextMarker = arr[nextMarkerIndex];\r\n      /** @type {{startTime: Number}} */\r\n      const { startTime } = marker;\r\n      /** @type {Number} */\r\n      const endTime = nextMarker ? nextMarker.startTime : this.player().duration();\r\n      /** @type{VTTCue} */\r\n      const cue = {\r\n        startTime,\r\n        endTime,\r\n        text: JSON.stringify(marker),\r\n      };\r\n\r\n      markersTrack.addCue(cue);\r\n    });\r\n  }\r\n\r\n\r\n  loadedMetadata() {\r\n    if (!this.markers.length) return;\r\n    this.markersTrack = this.player.addTextTrack(\r\n      'metadata',\r\n      'chapter-markers',\r\n      this.player.language()\r\n    );\r\n\r\n    this.markers.forEach((marker, index, arr) => {\r\n      const nextMarkerIndex = index + 1;\r\n      const nextMarker = arr[nextMarkerIndex];\r\n      /** @type {{startTime: Number}} */\r\n      const { startTime } = marker;\r\n      /** @type {Number} */\r\n      const endTime = nextMarker ? nextMarker.startTime : this.player.duration();\r\n      /** @type{VTTCue} */\r\n      const cue = {\r\n        startTime,\r\n        endTime,\r\n        text: JSON.stringify(marker),\r\n      };\r\n\r\n      this.markersTrack.addCue(cue);\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  dispose() {\r\n    super.dispose();\r\n    videojs.log('the advanced plugin is being disposed');\r\n  }\r\n\r\n  updateState() {\r\n    this.setState({playing: !this.player.paused()});\r\n  }\r\n\r\n  logState(changed) {\r\n    videojs.log(`the player is now ${this.state.playing ? 'playing' : 'paused'}`);\r\n  }\r\n}\r\n\r\nvideojs.registerPlugin('chapter', Chapters);\r\n\r\nexport default Chapters;","// import videojs from 'video.js';\r\n\r\n/**\r\n * A class representing the markers display.\r\n *\r\n * This component is designed to be used inside the `SeekBar` component.\r\n *\r\n * @class MarkersDisplay\r\n * @extends videojs.getComponent('component')\r\n */\r\nclass MarkersDisplay extends videojs.getComponent('component') {\r\n   // The constructor of a component receives two arguments: the\r\n  // player it will be associated with and an object of options.\r\n  constructor(player, options = {}) {\r\n\r\n    // It is important to invoke the superclass before anything else, \r\n    // to get all the features of components out of the box!\r\n    super(player, options);\r\n    this.resetChildren = this.resetChildren.bind(this);\r\n    this.loadMarkers = this.loadMarkers.bind(this);\r\n\r\n    this.player().on('loadstart', this.resetChildren);\r\n    this.player().on('loadeddata', this.loadMarkers);\r\n    this.player().on('playerreset', this.resetChildren);\r\n  }\r\n  loadMarkers() {\r\n    /** @type {videojs.TextTrack} */\r\n    const markersTrack = Array.from(this.player().textTracks()).find(\r\n      (track) => track.label === 'chapter-markers'\r\n    );\r\n\r\n    if (!markersTrack) {\r\n      this.addChild('marker-empty', {\r\n        className: 'marker-empty',\r\n        componentClass: 'markerDisplay',\r\n        startTime: 0,\r\n        endTime: this.player().duration(),\r\n      });\r\n      return ;\r\n    }\r\n\r\n    const markers = markersTrack.cues_;\r\n    const gap = videojs.computedStyle(this.el(), 'gap');\r\n\r\n    markers.forEach((marker, index, arr) => {\r\n      if(this.player().duration()>startTime){\r\n\r\n        if (index === 0 && marker.startTime > 0 ) {\r\n          const name = 'marker-empty';\r\n\r\n          this.addChild(name, {\r\n            className: name,\r\n            componentClass: 'markerDisplay',\r\n            endTime: marker.startTime,\r\n            gap: gap,\r\n            startTime: 0,\r\n          });\r\n        }\r\n\r\n        const name = `marker-${index}`;\r\n        const hasNextMarker = arr[index + 1];\r\n\r\n        this.addChild(name, {\r\n          className: name,\r\n          componentClass: 'markerDisplay',\r\n          endTime: marker.endTime,\r\n          gap: hasNextMarker ? gap : undefined,\r\n          startTime: marker.startTime,\r\n        });\r\n      }\r\n    });\r\n    \r\n    \r\n    // this.addMarkers(markersTrack.cues_);\r\n  }\r\n\r\n  addMarkers(markers = []) {\r\n    const gap = videojs.dom.computedStyle(this.el(), 'gap');\r\n\r\n    markers.forEach((marker, index, arr) => {\r\n      if (index === 0 && marker.startTime > 0) {\r\n        const name = 'marker-empty';\r\n\r\n        this.addChild(name, {\r\n          className: name,\r\n          componentClass: 'markerDisplay',\r\n          endTime: marker.startTime,\r\n          gap: gap,\r\n          startTime: 0,\r\n        });\r\n      }\r\n\r\n      const name = `marker-${index}`;\r\n      const hasNextMarker = arr[index + 1];\r\n\r\n      this.addChild(name, {\r\n        className: name,\r\n        componentClass: 'markerDisplay',\r\n        endTime: marker.endTime,\r\n        gap: hasNextMarker ? gap : undefined,\r\n        startTime: marker.startTime,\r\n      });\r\n    });\r\n  }\r\n\r\n  resetChildren() {\r\n    this.children().forEach((/**@type {import('./marker-display.js').default}*/ child) => {\r\n      child.dispose();\r\n    });\r\n\r\n    this.children_ = [];\r\n\r\n    videojs.dom.emptyEl(this.el());\r\n  }\r\n\r\n  buildCSSClass() {\r\n    return `cst-markers ${super.buildCSSClass()}`.trim();\r\n  }\r\n\r\n  // The `createEl` function of a component creates its DOM element.\r\n  createEl() {\r\n    return videojs.dom.createEl('div', {\r\n        className: this.buildCSSClass(),\r\n      });\r\n  }\r\n\r\n  // This function could be called at any time to update the text \r\n  // contents of the component.\r\n  updateTextContent(text) {\r\n\r\n    // If no text was provided, default to \"Title Unknown\"\r\n    if (typeof text !== 'string') {\r\n      text = 'Title Unknown';\r\n    }\r\n\r\n    // Use Video.js utility DOM methods to manipulate the content\r\n    // of the component's element.\r\n    videojs.emptyEl(this.el());\r\n    videojs.appendContent(this.el(), text);\r\n  }\r\n\r\n  dispose() {\r\n    this.player().off('loadstart', this.resetChildren);\r\n    this.player().off('loadeddata', this.loadMarkers);\r\n    this.player().off('playerreset', this.resetChildren);\r\n    this.resetChildren();\r\n\r\n    super.dispose();\r\n  }\r\n}\r\n\r\nexport default videojs.registerComponent('MarkersDisplay', MarkersDisplay);\r\n","// import videojs from 'video.js';\r\n\r\n/**\r\n * @typedef {Object} markerOptions\r\n *\r\n * @property {number} gap - The gap between the marker and the next one.\r\n * @property {number} endTime - The end time of the marker.\r\n * @property {number} startTime - The start time of the marker.\r\n */\r\n\r\n/**\r\n * A class representing a marker that will be displayed in the progress bar.\r\n *\r\n * @class\r\n * @extends Component\r\n */\r\nclass MarkerDisplay extends videojs.getComponent('component') {\r\n  /**\r\n   * Initialize a new `MarkerDisplay`.\r\n   * @constructor\r\n   *\r\n   * @param {videojs.Player} player - The player instance.\r\n   * @param {markerOptions} options - The options for the marker component.\r\n   */\r\n  constructor(player, options) {\r\n    super(player, options);\r\n    const { gap } = options;\r\n\r\n    this.updateMarkerPlayed = this.updateMarkerPlayed.bind(this);\r\n    this.updateMarkerBuffered = this.updateMarkerBuffered.bind(this);\r\n\r\n    this.setMarkerWidth(this.markerWidth(), gap);\r\n    this.player().on('timeupdate', this.updateMarkerPlayed);\r\n    this.player().on('progress', this.updateMarkerBuffered);\r\n  }\r\n\r\n  /**\r\n   * Sets the width of the marker element using inline styles.\r\n   *\r\n   * @param {Number} width - The width of the marker as a percentage.\r\n   * @param {string} gap - The gap between the current marker and the next one.\r\n   */\r\n  setMarkerWidth(width, gap) {\r\n    const styleWidth =\r\n      gap !== undefined\r\n        ? `width: calc(${width}% - ${gap})`\r\n        : `width: ${width}%`;\r\n\r\n    this.setAttribute('style', styleWidth);\r\n  }\r\n\r\n  /**\r\n   * Calculates the width of the marker as a percentage of the player's duration.\r\n   *\r\n   * @return {number} The width of the marker as a percentage.\r\n   */\r\n  markerWidth() {\r\n    const { endTime, startTime } = this.options();\r\n\r\n    return ((endTime - startTime) / this.player().duration()) * 100;\r\n  }\r\n\r\n  /**\r\n   * Updates the marker background color based on the provided time and the css\r\n   * variable name.\r\n   *\r\n   * @param {number} time - The time (in seconds).\r\n   * @param {string} cssVar - The CSS variable name.\r\n   */\r\n  updateMarker(time = 0, cssVar) {\r\n    if(!this.parentComponent_.el().getClientRects().length) return;\r\n\r\n    const duration = this.player().duration();\r\n    const markersElWidth = this.parentComponent_.el().getClientRects()[0].width;\r\n    const markerOffsetLeft = this.el().offsetLeft;\r\n    const markerOffsetWidth = this.el().offsetWidth;\r\n    const markerStart = (duration * markerOffsetLeft) / markersElWidth;\r\n    const markerEnd =\r\n      (duration * (markerOffsetLeft + markerOffsetWidth)) / markersElWidth;\r\n    const percent = (time - markerStart) / (markerStart - markerEnd);\r\n\r\n    if (time > markerEnd) {\r\n      // Setting the value to 200% avoids losing pixel when resizing the player.\r\n      this.el().style.setProperty(cssVar, `200%`);\r\n    }\r\n\r\n    if (time < markerStart) {\r\n      this.el().style.setProperty(cssVar, `0%`);\r\n    }\r\n\r\n    if (time >= markerStart && time <= markerEnd) {\r\n      this.el().style.setProperty(cssVar, `${Math.abs(percent) * 100}%`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the buffered portion of the marker.\r\n   */\r\n  updateMarkerBuffered() {\r\n    this.updateMarker(this.player().bufferedEnd(), '--_cst-marker-buffered');\r\n  }\r\n\r\n  /**\r\n   * Updates the played portion of the marker.\r\n   */\r\n  updateMarkerPlayed() {\r\n    this.updateMarker(this.player().currentTime(), '--_cst-marker-played');\r\n  }\r\n\r\n  // ***************************************************************************\r\n  // Standard component functions **********************************************\r\n  // ***************************************************************************\r\n\r\n  /**\r\n   * Builds the CSS class for the marker component.\r\n   *\r\n   * @return {string} The CSS class for the marker component.\r\n   */\r\n  buildCSSClass() {\r\n    return `cst-marker ${super.buildCSSClass()}`.trim();\r\n  }\r\n\r\n  /**\r\n   * Creates the DOM element for the marker component.\r\n   *\r\n   * @return {HTMLDivElement} The DOM element for the marker component.\r\n   */\r\n  createEl() {\r\n    return super.createEl('div', {\r\n      className: this.buildCSSClass(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Disposes of the marker component.\r\n   */\r\n  dispose() {\r\n    this.player().off('timeupdate', this.updateMarkerPlayed);\r\n    this.player().off('progress', this.updateMarkerBuffered);\r\n\r\n    super.dispose();\r\n  }\r\n}\r\n\r\nexport default videojs.registerComponent('MarkerDisplay', MarkerDisplay);\r\n","// import videojs from 'video.js';\r\n\r\nclass MouseTimeDisplay extends videojs.getComponent('MouseTimeDisplay') {\r\n  constructor(player, options) {\r\n    super(\r\n      player,\r\n      videojs.mergeOptions(\r\n        {\r\n          children: [\r\n            {\r\n              componentClass: 'timeTooltipMarker',\r\n              name: 'timeTooltip',\r\n            },\r\n          ],\r\n        },\r\n        options\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns an array of chapter cues from the 'chapter-markers' text track.\r\n   *\r\n   * @returns {Array} An array of chapter cues.\r\n   */\r\n  markers() {\r\n    const [chapterTrack = { cues: {} }] = Array.from(\r\n      this.player().textTracks()\r\n    ).filter(({ label }) => label === 'chapter-markers');\r\n\r\n    if (!chapterTrack) return [];\r\n\r\n    const chapterCues = Array.from(chapterTrack.cues);\r\n\r\n    if (chapterCues) return chapterCues;\r\n\r\n    return [];\r\n  }\r\n\r\n  update(seekBarRect, seekBarPoint) {\r\n    const time = seekBarPoint * this.player_.duration();\r\n    const { text = '{}' } =\r\n      this.markers().findLast((marker) => time >= marker.startTime) || {};\r\n    const { label = undefined } = JSON.parse(text);\r\n\r\n    this.getChild('timeTooltip').updateTime(\r\n      seekBarRect,\r\n      seekBarPoint,\r\n      time,\r\n      () => {\r\n        const seekBarRectWidth = seekBarRect.width;\r\n        const position = seekBarRectWidth * seekBarPoint;\r\n        const timeTooltipWidth = parseFloat(\r\n          videojs.computedStyle(this.el().firstChild, 'width')\r\n        );\r\n        const timeTooltipPosition = position + timeTooltipWidth / 2;\r\n\r\n        this.el().style.transform = `translateX(${position}px)`;\r\n\r\n        if (\r\n          (timeTooltipPosition >= timeTooltipWidth &&\r\n            timeTooltipPosition <= seekBarRectWidth &&\r\n            this.getChild('timeTooltip').el().style.length === 0) ||\r\n          timeTooltipWidth > seekBarRectWidth\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        if (\r\n          timeTooltipPosition >= timeTooltipWidth &&\r\n          timeTooltipPosition <= seekBarRectWidth &&\r\n          this.getChild('timeTooltip').el().style.length\r\n        ) {\r\n          this.getChild('timeTooltip').el().style = '';\r\n          return;\r\n        }\r\n\r\n        if (timeTooltipPosition >= seekBarRectWidth) {\r\n          this.getChild(\r\n            'timeTooltip'\r\n          ).el().style.transform = `translateX(calc(-50% - ${Math.abs(\r\n            seekBarRectWidth - timeTooltipPosition\r\n          )}px))`;\r\n        }\r\n\r\n        if (timeTooltipPosition <= timeTooltipWidth) {\r\n          this.getChild(\r\n            'timeTooltip'\r\n          ).el().style.transform = `translateX(calc(-50% + ${Math.abs(\r\n            Math.abs(timeTooltipPosition - timeTooltipWidth)\r\n          )}px))`;\r\n        }\r\n      },\r\n      label\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Builds the CSS class for the component.\r\n   *\r\n   * @return {string} The CSS class for the component.\r\n   */\r\n  buildCSSClass() {\r\n    return `vjs-simple-markers ${super.buildCSSClass()}`.trim();\r\n  }\r\n\r\n  /**\r\n   * Creates the DOM element for the component.\r\n   *\r\n   * @return {HTMLDivElement} The DOM element for the component.\r\n   */\r\n  createEl() {\r\n    return super.createEl();\r\n  }\r\n}\r\n\r\nexport default videojs.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\r\n","// import videojs from 'video.js';\r\n\r\nclass TimeTooltipMarker extends videojs.getComponent('TimeTooltip') {\r\n  update(content) {\r\n    this.write(content);\r\n  }\r\n\r\n  updateTime(seekBarRect, seekBarPoint, time, cb, label) {\r\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\r\n      let content;\r\n      const duration = this.player_.duration();\r\n\r\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\r\n        const liveWindow = this.player_.liveTracker.liveWindow();\r\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\r\n\r\n        content =\r\n          (secondsBehind < 1 ? '' : '-') +\r\n          videojs.formatTime(secondsBehind, liveWindow);\r\n      } else {\r\n        content = videojs.formatTime(time, duration);\r\n      }\r\n\r\n      if (label) {\r\n        content = `${label} (${content})`;\r\n      }\r\n\r\n      this.update(content);\r\n\r\n      if (cb) {\r\n        cb();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nvideojs.registerComponent('TimeTooltipMarker', TimeTooltipMarker);\r\n"],"names":["$8713b4803d136181$var$MarkersDisplay","videojs","getComponent","constructor","player","options","resetChildren","bind","loadMarkers","on","markersTrack","Array","from","textTracks","find","track","label","addChild","className","componentClass","startTime","endTime","duration","markers","cues_","gap","computedStyle","el","forEach","marker","index","arr","name","hasNextMarker","undefined","addMarkers","dom","children","child","dispose","children_","emptyEl","buildCSSClass","trim","createEl","updateTextContent","text","appendContent","off","registerComponent","$2e140a08cd56511a$var$MarkerDisplay","updateMarkerPlayed","updateMarkerBuffered","setMarkerWidth","markerWidth","width","styleWidth","setAttribute","updateMarker","time","cssVar","parentComponent_","getClientRects","length","markersElWidth","markerOffsetLeft","offsetLeft","markerOffsetWidth","offsetWidth","markerStart","markerEnd","style","setProperty","Math","abs","bufferedEnd","currentTime","$df87045100e54dda$var$MouseTimeDisplay","mergeOptions","chapterTrack","cues","filter","update","seekBarRect","seekBarPoint","player_","findLast","JSON","parse","getChild","updateTime","seekBarRectWidth","position","timeTooltipWidth","parseFloat","firstChild","timeTooltipPosition","transform","$7f042754df40714f$var$TimeTooltipMarker","content","write","cb","requestNamedAnimationFrame","liveTracker","isLive","liveWindow","secondsBehind","formatTime","$51dd5f39690b127d$var$Plugin","getPlugin","registerPlugin","player1","addClass","loadedMetadata","addMark","addTextTrack","language","nextMarker","cue","stringify","addCue","log","updateState","setState","playing","paused","logState","changed","state"],"version":3,"file":"chapter-plugin.js.map"}